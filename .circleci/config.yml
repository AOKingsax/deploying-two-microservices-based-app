version: 2.1
orbs:
  slack: circleci/slack@4.12.1
  aws-cli: circleci/aws-cli@3.1.4

commands:
  install_terraform:
    description: install Terraform
    steps:
      - run:
          name: install terraform
          command: |
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install terraform

  destroy-environment:
    description: Destroy eks cluster environment
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            terraform destroy --auto-approve

  install_kubectl:
    description: install kubectl for kubernetes
    steps:
      - run:
          name: install kubectl
          command: |
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl
            sudo apt-get install -y apt-transport-https
            sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl
            kubectl version --client --output=yaml

  install_helm:
    description: installing helm for kubernetes package manager
    steps:
      - run:
          name: install helm
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo add stable https://charts.helm.sh/stable
            helm repo add grafana https://grafana.github.io/helm-charts
            helm repo update

jobs:
  build-docker-image:
    machine:
      image: ubuntu-2204:2022.04.2
      # - image: royalkingsax/ubuntu:latest
      #   auth:
      #     username: $DOCKERHUB_USER
      #     password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: build and push docker image
          command: |
            cd laravel-app/app
            docker build -t royalkingsax/laravel-app:latest .
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker push royalkingsax/laravel-app:latest

  create-eks-cluster:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - install_terraform
      - run:
          name: terraform create eks cluster
          command: |
            cd terraform
            terraform init
            terraform plan -out sf.tfplan
            terraform apply "sf.tfplan"
      - persist_to_workspace:
          root: ~/
          paths:
            - project/terraform/*

      - destroy-environment

  deploy-sock-shop-app:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - install_kubectl
      - run:
          name: update the local kubeconfig file
          command: |
            aws eks update-kubeconfig --name dev-eks-cluster --region us-east-1
      - run:
          name: deploy sock shop app
          command: |
            cd sock-shop-app/kubernetes-app
            kubectl apply -f deployment.yml

      - install_terraform
      - destroy-environment

  deploy-laravel-app:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - install_kubectl
      - run:
          name: update the local kubeconfig file
          command: |
            aws eks update-kubeconfig --name dev-eks-cluster --region us-east-1
      - run:
          name: deploy laravel app to eks cluster
          command: |
            cd laravel-app/kubernetes
            kubectl apply -f laravel.yml
            kubectl apply -f mysql-secret.yml
            kubectl apply -f mysql.yml
            

            kubectl get pods -o=name -n laravel | grep laravel | sed "s/^.\{4\}//" > laravel-pod-name
            export LARAVEL_POD_NAME="$(cat ./laravel-pod-name)"
            cat laravel-pod-name
            rm laravel-pod-name

            sleep 60

            kubectl exec -n laravel -it $LARAVEL_POD_NAM -- service php8.1-fpm restart
            kubectl exec -n laravel -it $LARAVEL_POD_NAME -- php artisan key:generate
            kubectl exec -n laravel -it $LARAVEL_POD_NAME -- service nginx reload
            # kubectl exec -n laravel -it $LARAVEL_POD_NAME -- php artisan migrate --seed

      - install_terraform
      - destroy-environment

  monitoring-and-logging:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - install_kubectl
      - install_helm
      - run:
          name: update the local kubeconfig file
          command: |
            aws eks update-kubeconfig --name dev-eks-cluster --region us-east-1
      - run:
          name: creating service monitor for laravel app
          command: |
            cd monitoring-and-logging
            kubectl config set-context --current --namespace laravel
            helm install prometheus prometheus-community/kube-prometheus-stack
            helm install mysql-exporter prometheus-community/prometheus-mysql-exporter -f values.yml
            kubectl apply -f laravel-service-monitor.yml
      - run:
          name: creating service monitor for sock-shop app
          command: |
            cd monitoring-and-logging
            kubectl apply -f all-service-monitor.yml

            helm install loki grafana/loki-stack --namespace loki --create-namespace --set grafana.enabled=true --set loki.isDefault=false
            kubectl get secret --namespace loki loki-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

      - install_terraform
      - destroy-environment

  ingress-entry-point:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - install_kubectl
      - run:
          name: update the local kubeconfig file
          command: |
            aws eks update-kubeconfig --name dev-eks-cluster --region us-east-1
      - run:
          name: creating all entry ingress
          command: |
            cd ingress
            kubectl apply -f ingress.yml

      - install_terraform
      - destroy-environment

workflows:
  dev-env:
    jobs:
      # - build-docker-image
      # - create-eks-cluster:
      #     requires: [build-docker-image]
      # - deploy-sock-shop-app:
      #     requires: [create-eks-cluster]
      - deploy-laravel-app
          # requires: [create-eks-cluster]
      # - monitoring-and-logging:
      #     requires: [deploy-sock-shop-app, deploy-laravel-app]
      # - ingress-entry-point:
      #     requires: [monitoring-and-logging]
